Build started 6/15/2016 10:12:55 AM.
     1>Project "C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\vsprojects\Statistics\Statistics.vcxproj" on node 3 (Build target(s)).
     1>ClCompile:
         C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\CL.exe /c /I"C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\eigen" /I"C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0" /Zi /nologo /W3 /WX- /sdl /O2 /Oi /Oy- /GL /D _MBCS /Gm- /EHsc /MD /GS /Gy /fp:precise /Zc:wchar_t /Zc:forScope /Fo"Release\\" /Fd"Release\vc120.pdb" /Gd /TP /analyze- /errorReport:prompt ..\..\src\Statistics.cpp
         Statistics.cpp
     1>C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\numeric\functional.hpp(229): warning C4244: '=' : conversion from 'const double' to 'float', possible loss of data
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\numeric\functional.hpp(226) : while compiling class template member function 'void boost::numeric::functional::min_assign_base<Left,Right,void>::operator ()(Left &,Right &) const'
                 with
                 [
                     Left=float
         ,            Right=const double
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\numeric\detail\function_n.hpp(128) : see reference to function template instantiation 'void boost::numeric::functional::min_assign_base<Left,Right,void>::operator ()(Left &,Right &) const' being compiled
                 with
                 [
                     Left=float
         ,            Right=const double
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\numeric\functional.hpp(343) : see reference to class template instantiation 'boost::numeric::functional::min_assign_base<Left,Right,void>' being compiled
                 with
                 [
                     Left=float
         ,            Right=const double
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/mpl/aux_/has_type.hpp(20) : see reference to class template instantiation 'boost::numeric::functional::min_assign<U1,U2,U3,U4>' being compiled
                 with
                 [
                     U1=float
         ,            U2=const double
         ,            U3=void
         ,            U4=void
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/mpl/aux_/preprocessed/plain/quote.hpp(90) : see reference to class template instantiation 'boost::mpl::aux::has_type<boost::numeric::functional::min_assign<U1,U2,U3,U4>,boost::mpl::bool_<true>>' being compiled
                 with
                 [
                     U1=float
         ,            U2=const double
         ,            U3=void
         ,            U4=void
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/mpl/aux_/preprocessed/plain/apply_wrap.hpp(69) : see reference to class template instantiation 'boost::mpl::quote4<F,Tag>::apply<T1,T2,T3,T4>' being compiled
                 with
                 [
                     F=boost::numeric::functional::min_assign
         ,            Tag=boost::mpl::void_
         ,            T1=float
         ,            T2=const double
         ,            T3=void
         ,            T4=void
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/mpl/aux_/preprocessed/plain/bind.hpp(349) : see reference to class template instantiation 'boost::mpl::apply_wrap4<boost::mpl::quote4<F,Tag>,float,const double,void,void>' being compiled
                 with
                 [
                     F=boost::numeric::functional::min_assign
         ,            Tag=boost::mpl::void_
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/mpl/aux_/preprocessed/plain/apply_wrap.hpp(80) : see reference to class template instantiation 'boost::mpl::bind4<boost::mpl::quote4<F,Tag>,boost::mpl::arg<1>,boost::mpl::arg<2>,boost::mpl::bind1<boost::mpl::quote1<boost::numeric::functional::tag,Tag>,boost::mpl::arg<1>>,boost::mpl::bind1<boost::mpl::quote1<boost::numeric::functional::tag,Tag>,boost::mpl::arg<2>>>::apply<T1,T2,T3,T4,T5>' being compiled
                 with
                 [
                     F=boost::numeric::functional::min_assign
         ,            Tag=boost::mpl::void_
         ,            T1=float
         ,            T2=const double
         ,            T3=boost::detail::function2<boost::numeric::functional::min_assign<boost::mpl::_1,boost::mpl::_2,boost::numeric::functional::tag<boost::mpl::_1>,boost::numeric::functional::tag<boost::mpl::_2>>>::arg2
         ,            T4=boost::detail::function2<boost::numeric::functional::min_assign<boost::mpl::_1,boost::mpl::_2,boost::numeric::functional::tag<boost::mpl::_1>,boost::numeric::functional::tag<boost::mpl::_2>>>::arg3
         ,            T5=boost::detail::function2<boost::numeric::functional::min_assign<boost::mpl::_1,boost::mpl::_2,boost::numeric::functional::tag<boost::mpl::_1>,boost::numeric::functional::tag<boost::mpl::_2>>>::arg4
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/mpl/aux_/preprocessed/plain/apply.hpp(124) : see reference to class template instantiation 'boost::mpl::apply_wrap5<boost::mpl::protect<boost::mpl::bind4<boost::mpl::quote4<F,Tag>,boost::mpl::arg<1>,boost::mpl::arg<2>,boost::mpl::bind1<boost::mpl::quote1<boost::numeric::functional::tag,Tag>,boost::mpl::arg<1>>,boost::mpl::bind1<boost::mpl::quote1<boost::numeric::functional::tag,Tag>,boost::mpl::arg<2>>>,0>,T1,T2,T3,T4,T5>' being compiled
                 with
                 [
                     F=boost::numeric::functional::min_assign
         ,            Tag=boost::mpl::void_
         ,            T1=float
         ,            T2=const double
         ,            T3=boost::detail::function2<boost::numeric::functional::min_assign<boost::mpl::_1,boost::mpl::_2,boost::numeric::functional::tag<boost::mpl::_1>,boost::numeric::functional::tag<boost::mpl::_2>>>::arg2
         ,            T4=boost::detail::function2<boost::numeric::functional::min_assign<boost::mpl::_1,boost::mpl::_2,boost::numeric::functional::tag<boost::mpl::_1>,boost::numeric::functional::tag<boost::mpl::_2>>>::arg3
         ,            T5=boost::detail::function2<boost::numeric::functional::min_assign<boost::mpl::_1,boost::mpl::_2,boost::numeric::functional::tag<boost::mpl::_1>,boost::numeric::functional::tag<boost::mpl::_2>>>::arg4
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\numeric\detail\function_n.hpp(82) : see reference to class template instantiation 'boost::mpl::apply5<F,float,const double,boost::detail::function2<F>::arg2,boost::detail::function2<F>::arg3,boost::detail::function2<F>::arg4>' being compiled
                 with
                 [
                     F=boost::numeric::functional::min_assign<boost::mpl::_1,boost::mpl::_2,boost::numeric::functional::tag<boost::mpl::_1>,boost::numeric::functional::tag<boost::mpl::_2>>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\statistics\min.hpp(43) : see reference to class template instantiation 'boost::detail::function2<boost::numeric::functional::min_assign<boost::mpl::_1,boost::mpl::_2,boost::numeric::functional::tag<boost::mpl::_1>,boost::numeric::functional::tag<boost::mpl::_2>>>::result<boost::detail::function2<boost::numeric::functional::min_assign<boost::mpl::_1,boost::mpl::_2,boost::numeric::functional::tag<boost::mpl::_1>,boost::numeric::functional::tag<boost::mpl::_2>>> (Sample &,Arg &)>' being compiled
                 with
                 [
                     Sample=float
         ,            Arg=const double
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\framework\accumulator_set.hpp(53) : see reference to function template instantiation 'void boost::accumulators::impl::min_impl<U1>::operator ()<Args>(const Args &)' being compiled
                 with
                 [
                     U1=float
         ,            Args=boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\framework\accumulator_set.hpp(53) : see reference to function template instantiation 'void boost::accumulators::impl::min_impl<U1>::operator ()<Args>(const Args &)' being compiled
                 with
                 [
                     U1=float
         ,            Args=boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/fusion/algorithm/iteration/detail/for_each.hpp(35) : see reference to function template instantiation 'void boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<Keyword,const double>,ArgumentPack>>::operator ()<T>(Accumulator &) const' being compiled
                 with
                 [
                     Keyword=boost::accumulators::tag::sample
         ,            ArgumentPack=boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>
         ,            T=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>
         ,            Accumulator=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/fusion/algorithm/iteration/detail/for_each.hpp(35) : see reference to function template instantiation 'void boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<Keyword,const double>,ArgumentPack>>::operator ()<T>(Accumulator &) const' being compiled
                 with
                 [
                     Keyword=boost::accumulators::tag::sample
         ,            ArgumentPack=boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>
         ,            T=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>
         ,            Accumulator=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/fusion/algorithm/iteration/detail/for_each.hpp(52) : see reference to function template instantiation 'void boost::fusion::detail::for_each_linear<boost::fusion::cons_iterator<Sequence>,boost::fusion::cons_iterator<boost::fusion::nil_>,F>(const First &,const Last &,const F &,boost::mpl::false_)' being compiled
                 with
                 [
                     Sequence=boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>,boost::accumulators::detail::build_acc_list<boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,true>::type>>>>>>
         ,            F=boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>>
         ,            First=boost::fusion::cons_iterator<boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>,boost::accumulators::detail::build_acc_list<boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,true>::type>>>>>>>
         ,            Last=boost::fusion::cons_iterator<boost::fusion::nil_>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/fusion/algorithm/iteration/detail/for_each.hpp(143) : see reference to function template instantiation 'void boost::fusion::detail::for_each_dispatch<Sequence,F,boost::fusion::forward_traversal_tag>(Sequence &,const F &,Tag)' being compiled
                 with
                 [
                     Sequence=boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>,boost::accumulators::detail::build_acc_list<boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,true>::type>>>>>>
         ,            F=boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>>
         ,            Tag=boost::fusion::forward_traversal_tag
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/fusion/algorithm/iteration/for_each.hpp(39) : see reference to function template instantiation 'void boost::fusion::detail::for_each<Sequence,F>(Sequence &,const F &,boost::mpl::false_)' being compiled
                 with
                 [
                     Sequence=boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>,boost::accumulators::detail::build_acc_list<boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,true>::type>>>>>>
         ,            F=boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\framework\accumulator_set.hpp(217) : see reference to function template instantiation 'void boost::fusion::for_each<boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<U1>,Feature>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<U1>,boost::accumulators::tag::max>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<U1,U2>,boost::accumulators::tag::sum>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<U1,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<U1,boost::accumulators::tag::mean,U3>,boost::accumulators::tag::variance>,boost::accumulators::detail::build_acc_list<boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<U1>,Feature>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<U1>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<U1,U2>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<U1,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,T>,6>>,Last,true>::type>>>>>>,UnaryFunction>(Sequence &,const F &)' being compiled
                 with
                 [
                     U1=float
         ,            Feature=boost::accumulators::tag::min
         ,            U2=boost::accumulators::tag::sample
         ,            U3=boost::accumulators::tag::sample
         ,            T=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>
         ,            Last=boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>
         ,            UnaryFunction=boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>>
         ,            Sequence=boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>,boost::accumulators::detail::build_acc_list<boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,true>::type>>>>>>
         ,            F=boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\framework\accumulator_set.hpp(254) : see reference to function template instantiation 'void boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>::visit<boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<Keyword,const double>,ArgumentPack>>>(const UnaryFunction &)' being compiled
                 with
                 [
                     Keyword=boost::accumulators::tag::sample
         ,            ArgumentPack=boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>
         ,            UnaryFunction=boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\framework\accumulator_set.hpp(254) : see reference to function template instantiation 'void boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>::visit<boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<Keyword,const double>,ArgumentPack>>>(const UnaryFunction &)' being compiled
                 with
                 [
                     Keyword=boost::accumulators::tag::sample
         ,            ArgumentPack=boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>
         ,            UnaryFunction=boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>>
                 ]
                 ..\..\src\Statistics.cpp(112) : see reference to function template instantiation 'void boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>::operator ()<double>(const A1 &)' being compiled
                 with
                 [
                     A1=double
                 ]
                 ..\..\src\Statistics.cpp(112) : see reference to function template instantiation 'void boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>::operator ()<double>(const A1 &)' being compiled
                 with
                 [
                     A1=double
                 ]
     1>C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\numeric\functional.hpp(242): warning C4244: '=' : conversion from 'const double' to 'float', possible loss of data
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\numeric\functional.hpp(239) : while compiling class template member function 'void boost::numeric::functional::max_assign_base<Left,Right,void>::operator ()(Left &,Right &) const'
                 with
                 [
                     Left=float
         ,            Right=const double
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\numeric\detail\function_n.hpp(128) : see reference to function template instantiation 'void boost::numeric::functional::max_assign_base<Left,Right,void>::operator ()(Left &,Right &) const' being compiled
                 with
                 [
                     Left=float
         ,            Right=const double
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\numeric\functional.hpp(348) : see reference to class template instantiation 'boost::numeric::functional::max_assign_base<Left,Right,void>' being compiled
                 with
                 [
                     Left=float
         ,            Right=const double
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/mpl/aux_/has_type.hpp(20) : see reference to class template instantiation 'boost::numeric::functional::max_assign<U1,U2,U3,U4>' being compiled
                 with
                 [
                     U1=float
         ,            U2=const double
         ,            U3=void
         ,            U4=void
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/mpl/aux_/preprocessed/plain/quote.hpp(90) : see reference to class template instantiation 'boost::mpl::aux::has_type<boost::numeric::functional::max_assign<U1,U2,U3,U4>,boost::mpl::bool_<true>>' being compiled
                 with
                 [
                     U1=float
         ,            U2=const double
         ,            U3=void
         ,            U4=void
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/mpl/aux_/preprocessed/plain/apply_wrap.hpp(69) : see reference to class template instantiation 'boost::mpl::quote4<F,Tag>::apply<T1,T2,T3,T4>' being compiled
                 with
                 [
                     F=boost::numeric::functional::max_assign
         ,            Tag=boost::mpl::void_
         ,            T1=float
         ,            T2=const double
         ,            T3=void
         ,            T4=void
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/mpl/aux_/preprocessed/plain/bind.hpp(349) : see reference to class template instantiation 'boost::mpl::apply_wrap4<boost::mpl::quote4<F,Tag>,float,const double,void,void>' being compiled
                 with
                 [
                     F=boost::numeric::functional::max_assign
         ,            Tag=boost::mpl::void_
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/mpl/aux_/preprocessed/plain/apply_wrap.hpp(80) : see reference to class template instantiation 'boost::mpl::bind4<boost::mpl::quote4<F,Tag>,boost::mpl::arg<1>,boost::mpl::arg<2>,boost::mpl::bind1<boost::mpl::quote1<boost::numeric::functional::tag,Tag>,boost::mpl::arg<1>>,boost::mpl::bind1<boost::mpl::quote1<boost::numeric::functional::tag,Tag>,boost::mpl::arg<2>>>::apply<T1,T2,T3,T4,T5>' being compiled
                 with
                 [
                     F=boost::numeric::functional::max_assign
         ,            Tag=boost::mpl::void_
         ,            T1=float
         ,            T2=const double
         ,            T3=boost::detail::function2<boost::numeric::functional::max_assign<boost::mpl::_1,boost::mpl::_2,boost::numeric::functional::tag<boost::mpl::_1>,boost::numeric::functional::tag<boost::mpl::_2>>>::arg2
         ,            T4=boost::detail::function2<boost::numeric::functional::max_assign<boost::mpl::_1,boost::mpl::_2,boost::numeric::functional::tag<boost::mpl::_1>,boost::numeric::functional::tag<boost::mpl::_2>>>::arg3
         ,            T5=boost::detail::function2<boost::numeric::functional::max_assign<boost::mpl::_1,boost::mpl::_2,boost::numeric::functional::tag<boost::mpl::_1>,boost::numeric::functional::tag<boost::mpl::_2>>>::arg4
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/mpl/aux_/preprocessed/plain/apply.hpp(124) : see reference to class template instantiation 'boost::mpl::apply_wrap5<boost::mpl::protect<boost::mpl::bind4<boost::mpl::quote4<F,Tag>,boost::mpl::arg<1>,boost::mpl::arg<2>,boost::mpl::bind1<boost::mpl::quote1<boost::numeric::functional::tag,Tag>,boost::mpl::arg<1>>,boost::mpl::bind1<boost::mpl::quote1<boost::numeric::functional::tag,Tag>,boost::mpl::arg<2>>>,0>,T1,T2,T3,T4,T5>' being compiled
                 with
                 [
                     F=boost::numeric::functional::max_assign
         ,            Tag=boost::mpl::void_
         ,            T1=float
         ,            T2=const double
         ,            T3=boost::detail::function2<boost::numeric::functional::max_assign<boost::mpl::_1,boost::mpl::_2,boost::numeric::functional::tag<boost::mpl::_1>,boost::numeric::functional::tag<boost::mpl::_2>>>::arg2
         ,            T4=boost::detail::function2<boost::numeric::functional::max_assign<boost::mpl::_1,boost::mpl::_2,boost::numeric::functional::tag<boost::mpl::_1>,boost::numeric::functional::tag<boost::mpl::_2>>>::arg3
         ,            T5=boost::detail::function2<boost::numeric::functional::max_assign<boost::mpl::_1,boost::mpl::_2,boost::numeric::functional::tag<boost::mpl::_1>,boost::numeric::functional::tag<boost::mpl::_2>>>::arg4
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\numeric\detail\function_n.hpp(82) : see reference to class template instantiation 'boost::mpl::apply5<F,float,const double,boost::detail::function2<F>::arg2,boost::detail::function2<F>::arg3,boost::detail::function2<F>::arg4>' being compiled
                 with
                 [
                     F=boost::numeric::functional::max_assign<boost::mpl::_1,boost::mpl::_2,boost::numeric::functional::tag<boost::mpl::_1>,boost::numeric::functional::tag<boost::mpl::_2>>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\statistics\max.hpp(43) : see reference to class template instantiation 'boost::detail::function2<boost::numeric::functional::max_assign<boost::mpl::_1,boost::mpl::_2,boost::numeric::functional::tag<boost::mpl::_1>,boost::numeric::functional::tag<boost::mpl::_2>>>::result<boost::detail::function2<boost::numeric::functional::max_assign<boost::mpl::_1,boost::mpl::_2,boost::numeric::functional::tag<boost::mpl::_1>,boost::numeric::functional::tag<boost::mpl::_2>>> (Sample &,Arg &)>' being compiled
                 with
                 [
                     Sample=float
         ,            Arg=const double
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\framework\accumulator_set.hpp(53) : see reference to function template instantiation 'void boost::accumulators::impl::max_impl<U1>::operator ()<Args>(const Args &)' being compiled
                 with
                 [
                     U1=float
         ,            Args=boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\framework\accumulator_set.hpp(53) : see reference to function template instantiation 'void boost::accumulators::impl::max_impl<U1>::operator ()<Args>(const Args &)' being compiled
                 with
                 [
                     U1=float
         ,            Args=boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/fusion/algorithm/iteration/detail/for_each.hpp(35) : see reference to function template instantiation 'void boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<Keyword,const double>,ArgumentPack>>::operator ()<T>(Accumulator &) const' being compiled
                 with
                 [
                     Keyword=boost::accumulators::tag::sample
         ,            ArgumentPack=boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>
         ,            T=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>
         ,            Accumulator=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/fusion/algorithm/iteration/detail/for_each.hpp(35) : see reference to function template instantiation 'void boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<Keyword,const double>,ArgumentPack>>::operator ()<T>(Accumulator &) const' being compiled
                 with
                 [
                     Keyword=boost::accumulators::tag::sample
         ,            ArgumentPack=boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>
         ,            T=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>
         ,            Accumulator=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/fusion/algorithm/iteration/detail/for_each.hpp(37) : see reference to function template instantiation 'void boost::fusion::detail::for_each_linear<boost::fusion::cons_iterator<boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<U1>,Feature>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<U1,U2>,boost::accumulators::tag::sum>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<U1,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<U1,boost::accumulators::tag::mean,U3>,boost::accumulators::tag::variance>,boost::accumulators::detail::build_acc_list<boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<U1>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<U1>,Feature>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<U1,U2>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<U1,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,T>,6>>,Last,true>::type>>>>>>,boost::fusion::cons_iterator<boost::fusion::nil_>,F>(const First &,const boost::fusion::cons_iterator<boost::fusion::nil_> &,const F &,boost::mpl::false_)' being compiled
                 with
                 [
                     U1=float
         ,            Feature=boost::accumulators::tag::max
         ,            U2=boost::accumulators::tag::sample
         ,            U3=boost::accumulators::tag::sample
         ,            T=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>
         ,            Last=boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>
         ,            F=boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>>
         ,            First=boost::fusion::cons_iterator<boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>,boost::accumulators::detail::build_acc_list<boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,true>::type>>>>>>
                 ]
     1>C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\statistics\sum.hpp(46): warning C4244: '+=' : conversion from 'const double' to 'float', possible loss of data
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\framework\accumulator_set.hpp(53) : see reference to function template instantiation 'void boost::accumulators::impl::sum_impl<U1,U2>::operator ()<Args>(const Args &)' being compiled
                 with
                 [
                     U1=float
         ,            U2=boost::accumulators::tag::sample
         ,            Args=boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\framework\accumulator_set.hpp(53) : see reference to function template instantiation 'void boost::accumulators::impl::sum_impl<U1,U2>::operator ()<Args>(const Args &)' being compiled
                 with
                 [
                     U1=float
         ,            U2=boost::accumulators::tag::sample
         ,            Args=boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/fusion/algorithm/iteration/detail/for_each.hpp(35) : see reference to function template instantiation 'void boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<Keyword,const double>,ArgumentPack>>::operator ()<T>(Accumulator &) const' being compiled
                 with
                 [
                     Keyword=boost::accumulators::tag::sample
         ,            ArgumentPack=boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>
         ,            T=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>
         ,            Accumulator=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/fusion/algorithm/iteration/detail/for_each.hpp(35) : see reference to function template instantiation 'void boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<Keyword,const double>,ArgumentPack>>::operator ()<T>(Accumulator &) const' being compiled
                 with
                 [
                     Keyword=boost::accumulators::tag::sample
         ,            ArgumentPack=boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>
         ,            T=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>
         ,            Accumulator=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/fusion/algorithm/iteration/detail/for_each.hpp(37) : see reference to function template instantiation 'void boost::fusion::detail::for_each_linear<boost::fusion::cons_iterator<boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<U1,U2>,Feature>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<U1,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<U1,boost::accumulators::tag::mean,U3>,boost::accumulators::tag::variance>,boost::accumulators::detail::build_acc_list<boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<U1>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<U1>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<U1,U2>,Feature>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<U1,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,T>,6>>,Last,true>::type>>>>,boost::fusion::cons_iterator<boost::fusion::nil_>,F>(const First &,const boost::fusion::cons_iterator<boost::fusion::nil_> &,const F &,boost::mpl::false_)' being compiled
                 with
                 [
                     U1=float
         ,            U2=boost::accumulators::tag::sample
         ,            Feature=boost::accumulators::tag::sum
         ,            U3=boost::accumulators::tag::sample
         ,            T=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>
         ,            Last=boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>
         ,            F=boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>>
         ,            First=boost::fusion::cons_iterator<boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>,boost::accumulators::detail::build_acc_list<boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,true>::type>>>>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/fusion/algorithm/iteration/detail/for_each.hpp(37) : see reference to function template instantiation 'void boost::fusion::detail::for_each_linear<boost::fusion::cons_iterator<boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,Feature>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<U1,U2>,boost::accumulators::tag::sum>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<U1,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<U1,boost::accumulators::tag::mean,U3>,boost::accumulators::tag::variance>,boost::accumulators::detail::build_acc_list<boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<U1>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<U1>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,Feature>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<U1,U2>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<U1,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,T>,6>>,Last,true>::type>>>>>,boost::fusion::cons_iterator<boost::fusion::nil_>,F>(const First &,const boost::fusion::cons_iterator<boost::fusion::nil_> &,const F &,boost::mpl::false_)' being compiled
                 with
                 [
                     Feature=boost::accumulators::tag::count
         ,            U1=float
         ,            U2=boost::accumulators::tag::sample
         ,            U3=boost::accumulators::tag::sample
         ,            T=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>
         ,            Last=boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>
         ,            F=boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>>
         ,            First=boost::fusion::cons_iterator<boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>,boost::accumulators::detail::build_acc_list<boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,true>::type>>>>>
                 ]
     1>C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\statistics\variance.hpp(104): warning C4244: 'initializing' : conversion from 'const double' to 'float', possible loss of data
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\framework\accumulator_set.hpp(53) : see reference to function template instantiation 'void boost::accumulators::impl::variance_impl<U1,U2,U3>::operator ()<Args>(const Args &)' being compiled
                 with
                 [
                     U1=float
         ,            U2=boost::accumulators::tag::mean
         ,            U3=boost::accumulators::tag::sample
         ,            Args=boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost\accumulators\framework\accumulator_set.hpp(53) : see reference to function template instantiation 'void boost::accumulators::impl::variance_impl<U1,U2,U3>::operator ()<Args>(const Args &)' being compiled
                 with
                 [
                     U1=float
         ,            U2=boost::accumulators::tag::mean
         ,            U3=boost::accumulators::tag::sample
         ,            Args=boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/fusion/algorithm/iteration/detail/for_each.hpp(35) : see reference to function template instantiation 'void boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<Keyword,const double>,ArgumentPack>>::operator ()<T>(Accumulator &) const' being compiled
                 with
                 [
                     Keyword=boost::accumulators::tag::sample
         ,            ArgumentPack=boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>
         ,            T=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>
         ,            Accumulator=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/fusion/algorithm/iteration/detail/for_each.hpp(35) : see reference to function template instantiation 'void boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<Keyword,const double>,ArgumentPack>>::operator ()<T>(Accumulator &) const' being compiled
                 with
                 [
                     Keyword=boost::accumulators::tag::sample
         ,            ArgumentPack=boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>
         ,            T=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>
         ,            Accumulator=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/fusion/algorithm/iteration/detail/for_each.hpp(37) : see reference to function template instantiation 'void boost::fusion::detail::for_each_linear<boost::fusion::cons_iterator<boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<U1,U2,U3>,Feature>,boost::accumulators::detail::build_acc_list<boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<U1>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<U1>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<U1,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<U1,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,T>,6>>,Last,true>::type>>,boost::fusion::cons_iterator<boost::fusion::nil_>,F>(const First &,const boost::fusion::cons_iterator<boost::fusion::nil_> &,const F &,boost::mpl::false_)' being compiled
                 with
                 [
                     U1=float
         ,            U2=boost::accumulators::tag::mean
         ,            U3=boost::accumulators::tag::sample
         ,            Feature=boost::accumulators::tag::variance
         ,            T=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>
         ,            Last=boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>
         ,            F=boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>>
         ,            First=boost::fusion::cons_iterator<boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>,boost::accumulators::detail::build_acc_list<boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,true>::type>>
                 ]
                 C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\external\boost_1_57_0\boost_1_57_0\boost/fusion/algorithm/iteration/detail/for_each.hpp(37) : see reference to function template instantiation 'void boost::fusion::detail::for_each_linear<boost::fusion::cons_iterator<boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<U1,U2>,Feature>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<U1,boost::accumulators::tag::mean,U3>,boost::accumulators::tag::variance>,boost::accumulators::detail::build_acc_list<boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<U1>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<U1>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<U1,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<U1,U2>,Feature>,T>,6>>,Last,true>::type>>>,boost::fusion::cons_iterator<boost::fusion::nil_>,F>(const First &,const boost::fusion::cons_iterator<boost::fusion::nil_> &,const F &,boost::mpl::false_)' being compiled
                 with
                 [
                     U1=float
         ,            U2=boost::accumulators::tag::sum
         ,            Feature=boost::accumulators::tag::mean
         ,            U3=boost::accumulators::tag::sample
         ,            T=boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>
         ,            Last=boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>
         ,            F=boost::accumulators::detail::accumulator_visitor<boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::sample,const double>,boost::parameter::aux::arg_list<boost::parameter::aux::tagged_argument<boost::accumulators::tag::accumulator,boost::accumulators::accumulator_set<float,boost::accumulators::features<boost::accumulators::tag::min,boost::accumulators::tag::max,boost::accumulators::tag::mean,boost::accumulators::tag::variance,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na,boost::mpl::na>,void>>,boost::parameter::aux::empty_arg_list>>>
         ,            First=boost::fusion::cons_iterator<boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::fusion::cons<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>,boost::accumulators::detail::build_acc_list<boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,boost::fusion::mpl_iterator<boost::mpl::v_iter<boost::mpl::vector6<boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::min_impl<float>,boost::accumulators::tag::min>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::max_impl<float>,boost::accumulators::tag::max>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::count_impl,boost::accumulators::tag::count>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::sum_impl<float,boost::accumulators::tag::sample>,boost::accumulators::tag::sum>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::mean_impl<float,boost::accumulators::tag::sum>,boost::accumulators::tag::mean>,boost::accumulators::detail::accumulator_wrapper<boost::accumulators::impl::variance_impl<float,boost::accumulators::tag::mean,boost::accumulators::tag::sample>,boost::accumulators::tag::variance>>,6>>,true>::type>>>
                 ]
       Lib:
         C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\Lib.exe /OUT:"C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\vsprojects\Release\Statistics.lib" /NOLOGO /LTCG Release\Statistics.obj
         Statistics.vcxproj -> C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\vsprojects\Release\Statistics.lib
     1>Done Building Project "C:\Users\HMMS\Documents\GitHub\Thesis\KUKA LWR\vsprojects\Statistics\Statistics.vcxproj" (Build target(s)).

Build succeeded.

Time Elapsed 00:00:04.09
